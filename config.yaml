# Configuration file for both server and clients
# Let's start with the server first
serialport: '/dev/ttyACM' # It will also test ACM1/ACM0 if this doesn't work
camtype: picamera # picamera or opencv
video_id: 0
video_size: [346, 540] #[150, 150] #[480, 640] #[80, 80] #[480, 640] #[150, 150]
client: ledclient
server_host: '0.0.0.0'
server_ip: http://10.99.39.174:5000
objective_na: 0.9
pupil_size: 500 # Function of NA, wavelength video size and magnification
wavelength: 650E-9
pixelsize: 650E-9
color: red
theta: [0, 360, 5] # [min, max, step]
phi: [0, 25, 1] # [min, max, step]
max_power: 255
# theta: [0, 200, 10] # [min, max, step]
# phi: [59, 76, 1] # [min, max, step]
shift: [0, 400, 1]
shift_step: 0.0188 # 0.0193 # mm/step [MS1 MS2 MS3] = [1 1 0]
theta_spr: 7680
shift_max: 1800 # max steps to border
sample_height: 110 # mm above led
servo_init: 75 # Zero angle for the servo motor
phi_spr: 2048
# For the recosntruction
n_iter: 500 # Max number of iterations
# posible defects
platform_tilt: [0, 0] #[spherical theta, shperical phi]
source_center: [0, 0] #[xcoord, ycoord] of the calibrated center
source_tilt: [0, 0] #[spherical theta, shperical phi]
# The client side of the equation
sweep: radial_efficient # The other is neopixels, have to change that name
task: simulation
action: reconstruct
servertype: sampling # simulation or sampling
output_cal: ./out/calibration_20170302.npy
output_sample: ./out_sampling/
output_sim: ./output_sim/
input_mag: './imgs/Image_4a_mag.png' # If task is simulation
input_phase: './imgs/Image_4a_phase.png' # If task is simulation
model_file: ./out/model_2017-03-06_01.yaml #./out/model_20170302.yaml
plat_model: normal #nomodel #normal
debug: False # Show me images and be verbose
